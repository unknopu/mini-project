from Crypto.Util.number import inverse, long_to_bytes

c = 16619404780962983954872008405315081675087426404176089690240499322550822569224766706456661329563736371775289140428407511077766129593704267059603638598396290331564864032780963421964009909096963935233671838376977634479220412958727015124552595672695568408723850390219512494221671397842284372955997970258759652642933937506094897601425812525013812365
n = 16974870967406279206421386436600436850229794140487223425493360987910180596697450751964731090431568597984535561587173844701917538961441969055912034815414434008047756650158649330403511991665867607860732564306684530770692612534210949856970042260773146922946933315149353851338453038840406896382844113073428744593846306280469922614120567230942571011
e = 65537

factor = '9118 021361 × 9331 232021 × 9359 052553 × 9460 836601 × 9572 916103 × 9903 324713 × 10065 993533 × 10479 929519 × 10654 000033 × 10704 131017 × 10778 404603 × 11218 308659 × 11365 847453 × 11498 548531 × 11775 118423 × 11832 283807 × 12027 755237 × 12394 727203 × 12757 833203 × 13053 876361 × 13200 342079 × 13557 959651 × 13576 949383 × 14142 647443 × 14445 255127 × 15099 256663 × 15465 019951 × 15749 009681 × 15948 572149 × 16008 305879 × 16065 354553 × 16615 443587 × 17020 503029 × 17067 257587'
factors = factor.replace(" ", "").split("×")
phi = 1

for f in factors:
    phi *= int(f)-1
d = inverse(e, phi)

dec = long_to_bytes(pow(c, d, n)).decode()
print(dec)

dec = bytes.fromhex(hex(pow(c, d, n))[2:])
print(dec.decode())



